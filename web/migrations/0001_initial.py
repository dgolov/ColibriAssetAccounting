# Generated by Django 4.1.7 on 2023-10-23 11:11

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('city', models.CharField(max_length=100, verbose_name='Город')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Наименование')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('year_of_purchase', models.DateField(verbose_name='Дата покупки')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата и время обновления')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Стоимость')),
                ('state', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], verbose_name='Состояние')),
                ('status', models.CharField(choices=[('in_work', 'В работе'), ('broken', 'Сломано'), ('under_repair', 'В ремонте'), ('in_reserve', 'В запасе')], max_length=256, verbose_name='Статус')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный')),
                ('auto_update_price', models.BooleanField(default=False, verbose_name='Автообновление стоимости')),
                ('ozon_slug', models.CharField(blank=True, max_length=256, null=True, verbose_name='Ссылка на ozon')),
                ('count', models.PositiveIntegerField(verbose_name='Количество')),
            ],
            options={
                'verbose_name': 'Актив',
                'verbose_name_plural': 'Активы',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название')),
                ('city', models.CharField(blank=True, max_length=256, null=True, verbose_name='Город')),
                ('address', models.CharField(blank=True, max_length=256, null=True, verbose_name='Адрес')),
                ('phone', models.CharField(blank=True, max_length=32, null=True, verbose_name='Номер телефона')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Адрес',
                'verbose_name_plural': 'Адреса',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_path', models.CharField(blank=True, max_length=256, null=True, verbose_name='Путь к файлу отчета')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время создания')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Отчет',
                'verbose_name_plural': 'Отчеты',
            },
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('level', models.CharField(choices=[('success', 'Успешно'), ('error', 'Ошибка'), ('warning', 'Предупреждение'), ('info', 'Информация'), ('debug', 'Отладка')], max_length=256, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время сообщения')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Уведомление',
                'verbose_name_plural': 'Уведомления',
            },
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.TextField(verbose_name='Наименование события')),
                ('old_name', models.CharField(blank=True, choices=[('in_work', 'В работе'), ('broken', 'Сломано'), ('under_repair', 'В ремонте'), ('in_reserve', 'В запасе')], max_length=256, null=True, verbose_name='Старое название')),
                ('new_name', models.CharField(blank=True, choices=[('in_work', 'В работе'), ('broken', 'Сломано'), ('under_repair', 'В ремонте'), ('in_reserve', 'В запасе')], max_length=256, null=True, verbose_name='Новое название')),
                ('old_price', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Старая стоимость')),
                ('new_price', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Новая стоимость')),
                ('old_state', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True, verbose_name='Старое состояние')),
                ('new_state', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True, verbose_name='Новое состояние')),
                ('old_status', models.CharField(blank=True, choices=[('in_work', 'В работе'), ('broken', 'Сломано'), ('under_repair', 'В ремонте'), ('in_reserve', 'В запасе')], max_length=256, null=True, verbose_name='Старый татус')),
                ('new_status', models.CharField(blank=True, choices=[('in_work', 'В работе'), ('broken', 'Сломано'), ('under_repair', 'В ремонте'), ('in_reserve', 'В запасе')], max_length=256, null=True, verbose_name='Новый статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время создания записи')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='web.asset', verbose_name='Актив')),
                ('new_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='new_history', to='web.location', verbose_name='Местоположение')),
                ('old_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='old_history', to='web.location', verbose_name='Местоположение')),
            ],
            options={
                'verbose_name': 'История',
                'verbose_name_plural': 'История',
            },
        ),
        migrations.CreateModel(
            name='AssetImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=256, null=True, verbose_name='Описание')),
                ('image', models.ImageField(upload_to='images/assets/', verbose_name='Изображенеие')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='web.asset', verbose_name='Актив')),
            ],
            options={
                'verbose_name': 'Изображение',
                'verbose_name_plural': 'Изображения',
            },
        ),
        migrations.AddField(
            model_name='asset',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assets', to='web.location', verbose_name='Местоположение'),
        ),
        migrations.AddField(
            model_name='asset',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children_list', to='web.asset', verbose_name='Родительский актив'),
        ),
    ]
